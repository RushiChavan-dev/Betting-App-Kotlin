plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
    id 'kotlin-parcelize'
}


android {
    compileSdkVersion 31
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.example.sprint"
        minSdkVersion 19
        targetSdkVersion 31
        namespace = "com.example.sprint"
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildFeatures {
        buildConfig true
        // other build features...
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField "String", "BASE_URL", "\"https://api.the-odds-api.com/v4/\""
            buildConfigField "String", "API_KEY", "\"b7e6788af9fc31cfc258411f840dc07d\""
        }
        debug {
            minifyEnabled false
            buildConfigField "String", "BASE_URL", "\"https://api.the-odds-api.com/v4/\""
            buildConfigField "String", "API_KEY", "\"b7e6788af9fc31cfc258411f840dc07d\""
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    viewBinding {
        enabled = true
    }

    applicationVariants.all { variant ->
        if (variant.buildType.name == "debug") {
            variant.outputs.all {
                outputFileName = "Gotrend Android-${getDate()}-debug-v${variant.versionName}(${versionCode}).apk"
            }
        } else if (variant.buildType.name == "release") {
            variant.outputs.all {
                outputFileName = "Gotrend Android-${getDate()}-release-v${variant.versionName}(${versionCode}).apk"
            }
        }
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.fragment:fragment-ktx:1.4.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    implementation 'androidx.multidex:multidex:2.0.1'


    //di (hilt)
    def hilt_android_version = '2.38.1'
    implementation "com.google.dagger:hilt-android:$hilt_android_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_android_version"

    //retrofit
    def retrofit_version = '2.9.0'
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"

    //kotlin coroutines
    def coroutines_android_version = '1.5.2'
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_android_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_android_version"

    //okHttp3
    implementation 'com.squareup.okhttp3:okhttp:4.8.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.8.0'


    //lifecycle
    def lifecycle_version = "2.4.1"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-extensions:2.2.0"

    //recycler view
    implementation "androidx.recyclerview:recyclerview:1.2.1"

    //glide
    def glide_version = "4.12.0"
    implementation "com.github.bumptech.glide:glide:$glide_version"
    kapt "com.github.bumptech.glide:compiler:$glide_version"

    //timber
    implementation 'com.jakewharton.timber:timber:4.7.1'

    //firebase bom
    // When using the BoM, you don't specify versions in Firebase library dependencies
    implementation platform('com.google.firebase:firebase-bom:29.3.1')
    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation 'com.google.firebase:firebase-config-ktx'
    implementation 'com.google.firebase:firebase-crashlytics-ktx'
    implementation 'com.google.firebase:firebase-messaging-ktx'
    implementation 'com.google.firebase:firebase-auth-ktx'

    // Also declare the dependency for the Google Play services library and specify its version
    implementation 'com.google.android.gms:play-services-auth:20.2.0'

    // joda time
    implementation 'net.danlew:android.joda:2.10.14'

    def lottieVersion = "5.0.3"
    implementation "com.airbnb.android:lottie:$lottieVersion"

}

static def getDate() {
    return new Date().format('dd.MM.yyyy')
}